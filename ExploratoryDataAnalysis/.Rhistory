)
View(slownik)
stopwordsPL <- readLines("C:/Users/siarkmi2/Documents/GitHub/stopwords/polish.stopwords.txt"
, encoding = "UTF-8")
?tokens_wordstem()
View(slownik)
class(slownik)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl(10)
pw <- {
"new_user_password"
}
library(forecast)
plot(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
dest <- "C:/Users/siarkmi2/OneDrive dla firm 1/NEW_WORLD_ORDER/SGH/MGR/BBreal_01.csv"
sales.raw <- read.csv2(dest)
sales <- tbl_df(sales.raw)
sales[is.na(sales)] <- 0
sales$data <- date(sales$data)
sales$Month <- as.Date(cut(sales$data,
breaks = "month"))
sales$Week <- as.Date(cut(sales$data,
breaks = "week",
start.on.monday = TRUE))
library(ggplot2)
library(scales)
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the month
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y-%m",
date_breaks = "1 month")  # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the week
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y",
date_breaks = "1 week") # custom x-axis labels
sales.xts <-  xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d'))
monthplot(sales.xts,ylab="$ million",xlab="Month",xaxt="n",
main="Seasonal deviation plot: antidiabetic drug sales")
axis(1,at=1:12,labels=month.abb,cex=0.8)
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=365)
plot.ts(sales.ts)
str(sales.ts)
class(sales.ts)
beer2 <- window(sales.ts)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
legend("topright",lty=1,col=c(4,2,3),
legend=c("Mean method","Naive method","Seasonal naive method"))
sales$week<-floor_date(sales$data,"week") +8
sales
library(dplyr)
x.ts
x<-ddply(sales, .(week), function(z) mean(z$sprzedaz))
x.ts <- ts(x$V1, start=c(2015,1,1),frequency=52)
plot.ts(x.ts)
beer2 <- window(x.ts)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
library(forecast)
plot(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
legend("topright",lty=1,col=c(4,2,3),
legend=c("Mean method","Naive method","Seasonal naive method"))
lines(beerfit1$mean,col=1)
plot.ts(x.ts)
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
plot(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
plot(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
autoplot(beerfit1, include, PI = TRUE)
autoplot(beerfit1, include, PI = TRUE)
autoplot(beerfit1, PI = TRUE)
plot(beerfit1, PI = TRUE)
plot(beerfit1, PI = FALSE)
plot(beerfit1, PI=FALSE, main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
plot.ts(x.ts, PI=FALSE)
plot.ts(x.ts, PI=FALSE)
x.ts <- ts(x$V1, start=c(2015,1,1),frequency=52)
x<-ddply(sales, .(week), function(z) mean(z$sprzedaz))
library(dplyr)
x<-ddply(sales, .(week), function(z) mean(z$sprzedaz))
library(plyr)
install.packages("plyr")
library(plyr)
library(plyr)
install.packages("plyr")
library(datasets)
example(points)
library(swirl)
install.packages(swirl)
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
setwd("C:/Users/siarkmi2/Documents/GitHub/Cursera/ExploratoryDataAnalysis")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
fileName <- "powerConsumtion.zip"
if (!file.exists(fileName)){
download.file(url, fileName)
}
filePath <-"Dataset"
if (!file.exists(filePath)){
unzip(fileName)
}
filePath <-""
if (!file.exists(filePath)){
unzip(fileName)
}
powerConsumtion <- read.table(file.path(filePath, "household_power_consumption.txt"))
powerConsumtion <- read.table("household_power_consumption.txt")
powerConsumtion
powerConsumtion <- read.table("household_power_consumption.txt", sep = ";")
if (!file.exists("fileName")) {
download.file(url, destfile = zip.file)
unzip(zip.file)
file.remove(zip.file)
}
unzip(fileName)
unzip(fileName)
fileName <- "powerConsumtion.zip"
if (!file.exists("fileName")) {
download.file(url, fileName)
unzip(fileName)
file.remove(fileName)
}
View(powerConsumtion)
View(powerConsumtion)
?grep
?read.tables
?read.table
powerConsumtion <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
View(powerConsumtion)
View(powerConsumtion)
View(powerConsumtion)
powerConsumtion$Date <- as.Date(powerConsumtion$Date, format = "%d/%m/%Y")
subPC <- powerConsumtion[Date >= "2017-02-01" & Date <= "2017-02-02" ]
subPC <- powerConsumtion[powerConsumtion$Date >= "2017-02-01" & powerConsumtion$Date <= "2017-02-02" ]
View(subPC)
subPC <- powerConsumtion[powerConsumtion$Date >= as.Date("2017-02-01")
& powerConsumtion$Date <= as.Date("2017-02-02") ]
subPC <- powerConsumtion[powerConsumtion$Date >= as.Date("2017-02-01")
& powerConsumtion$Date <= as.Date("2017-02-02") ]
subPC <- powerConsumtion[Date %between% c("2017-02-01","2017-02-02") ]
library(data.table)
install.packages("data.table")
library(data.table)
subPC <- powerConsumtion[Date %between% c("2017-02-01","2017-02-02") ]
subPC <- powerConsumtion[powerConsumtion$Date %between% c("2017-02-01","2017-02-02") ]
setwd("C:/Users/siarkmi2/Documents/GitHub/Cursera/ExploratoryDataAnalysis")
url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
fileName <- "powerConsumtion.zip"
if (!file.exists("fileName")) {
download.file(url, fileName)
unzip(fileName)
file.remove(fileName)
}
powerConsumtion <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
subPC <- powerConsumtion[powerConsumtion$Date %between% c("2017-02-01","2017-02-02") ]
powerConsumtion$Date <- as.Date(powerConsumtion$Date, format = "%d/%m/%Y")
subPC <- powerConsumtion[powerConsumtion$Date %between% c("2017-02-01","2017-02-02") ]
View(powerConsumtion)
subPC <- powerConsumtion[powerConsumtion$Date %between% c("2007-02-01","2007-02-02") ]
powerConsumtion$Date <- as.Date(powerConsumtion$Date, format = "%d/%m/%Y")
subPC <- powerConsumtion[Date %between% c("2007-02-01","2007-02-02") ]
subPC <- powerConsumtion[Date %between% c("2007-02-01","2007-02-02") ]
subPC <- powerConsumtion[powerConsumtion$Date %between% c("2007-02-01","2007-02-02") ]
subPC <- powerConsumtion[Date %between% c("2007-02-01","2007-02-02") ]
subPC <- powerConsumtion[Date %between% c("2007-02-01","2007-02-02") ]
subPC <- powerConsumtion[Date %between% c("2007-02-01","2007-02-02") ]
subPC2 <- subset(powerConsumtion, Date> "2007-02-01" & Date < "2007-02-03")
subPC <- subset(powerConsumtion, Date >= "2007-02-01" & Date <= "2007-02-02")
View(subPC)
View(subPC)
View(subPC2)
subPC[subPC == ?]
subPC[subPC == "?"]
subPC[subPC == "?"]
subPC[subPC == "?"]
subPC["?"]
View(subPC)
View(subPC)
subPC[subPC == "?"] <- NA
powerConsumtion[powerConsumtion == "?"] <- NA
powerConsumtion[powerConsumtion == "?"] <- NA
powerConsumtion[powerConsumtion == '?'] <- NA
powerConsumtion[powerConsumtion == '?']
powerConsumtion[powerConsumtion == ?]
powerConsumtion[powerConsumtion == ""]
powerConsumtion[powerConsumtion = "?"]
powerConsumtion[powerConsumtion = "?"]
powerConsumtion[powerConsumtion = "?"]
powerConsumtion[powerConsumtion == "?"]
powerConsumtion <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
powerConsumtion[powerConsumtion =="?" ] <- NA
powerConsumtion$Date <- as.Date(powerConsumtion$Date, format = "%d/%m/%Y")
subPC <- subset(powerConsumtion, Date >= "2007-02-01" & Date <= "2007-02-02")
?strptime
powerConsumtion$Time <- strptime(powerConsumtion$Time )
powerConsumtion$Time <- strptime(powerConsumtion$Time, format = "%H:%M:%S" )
subPC <- subset(powerConsumtion, Date >= "2007-02-01" & Date <= "2007-02-02")
View(subPC)
View(subPC)
powerConsumtion <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
powerConsumtion[powerConsumtion =="?" ] <- NA
powerConsumtion$Date <- as.Date(powerConsumtion$Date, format = "%d/%m/%Y")
powerConsumtion[powerConsumtion =="?" ] <- NA
powerConsumtion <- read.table("household_power_consumption.txt", sep = ";", header = TRUE)
powerConsumtion[powerConsumtion =="?" ] <- NA
powerConsumtion$Date <- as.Date(powerConsumtion$Date, format = "%d/%m/%Y")
subPC <- subset(powerConsumtion, Date >= "2007-02-01" & Date <= "2007-02-02")
subPC$Time <- strptime(subPC$Time, format = "%H:%M:%S" )
subPC$Global_active_power <- as.numeric(subPC$Global_active_power)
hist(subPC$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
subPC$Global_active_power <- subPC$Global_active_power/1000
hist(subPC$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
brakes = seq(0,6,by=0.5)
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
brakes = seq(0,6,by=0.5),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
breaks = seq(0,6,by=0.5),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
png(file ="plot1.png", width = 480, height = 480, units = "px")
hist(subPC$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
breaks = seq(0,6,by=0.25),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
breaks = seq(0,3,by=0.25),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
breaks = seq(0,3,by=0.25),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
breaks = seq(0,3, by = 0.25),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
View(subPC)
View(subPC)
subPC <- subset(powerConsumtion, Date >= "2007-02-01" & Date <= "2007-02-02")
subPC$Time <- strptime(subPC$Time, format = "%H:%M:%S" )
subPC$Global_active_power <- as.numeric(subPC$Global_active_power)
subPC$Global_active_power <- subPC$Global_active_power
hist(subPC$Global_active_power,
breaks = seq(0,3, by = 0.25),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
breaks = seq(0,6, by = 0.25),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
breaks = seq(0,6, by = 0.25),
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
hist(subPC$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
png(file ="plot1.png", width = 480, height = 480, units = "px")
hist(subPC$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
dev.off() # Close the png file device
subPC$DateTime <- as.POSIXct(strptime(paste(subPC$Date, subPC$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S" ))
View(subPC)
View(subPC)
paste(subPC$Date, subPC$Time, sep = " ")
strptime(paste(subPC$Date, subPC$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S" )
paste(subPC$Date, subPC$Time, sep = " ")
subPC$DateTime <- paste(subPC$Date, subPC$Time, sep = " "), format = "%Y-%m-%d %H:%M:%S")
subPC$DateTime <- strftime(paste(subPC$Date, subPC$Time, sep = " "), format = "%Y-%m-%d %H:%M:%S")
subPC$DateTime <- strptime(paste(subPC$Date, subPC$Time, sep = " "), format = "%Y-%m-%d %H:%M:%S")
subPC$DateTime <- strftime(paste(subPC$Date, subPC$Time, sep = " "), format = "%Y-%m-%d %H:%M:%S")
subPC$DateTime <- strptime(paste(subPC$Date, subPC$Time, sep = " "), format = "%Y-%m-%d %H:%M:%S")
format = "%Y-%m-%d %H:%M:%S" )
?strptime
paste(subPC$Date, subPC$Time, sep = " ")
subPC <- subset(powerConsumtion, Date >= "2007-02-01" & Date <= "2007-02-02")
subPC$Global_active_power <- as.numeric(subPC$Global_active_power)
subPC$DateTime <- strptime(paste(subPC$Date, subPC$Time, sep = " "), format = "%Y-%m-%d %H:%M:%S")
subPC$DateTime <- as.POSIXct(strptime(paste(subPC$Date, subPC$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S" ))
plot(subPC$DateTime,
subPC$Global_active_power,
type = '1',
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)"
)
plot(subPC$DateTime,
subPC$Global_active_power,
xlab = ""
ylab = "Global Active Power (kilowatts)"
)
plot(subPC$DateTime,
subPC$Global_active_power,
xlab = ""
ylab = "Global Active Power (kilowatts)"
)
plot(subPC$DateTime,
subPC$Global_active_power,
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
plot(subPC$DateTime,
subPC$Global_active_power,
type = "1",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
?plot
plot(subPC$DateTime,
subPC$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
png(file ="plot2.png", width = 480, height = 480, units = "px")
plot(subPC$DateTime,
subPC$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
dev.off() # Close the png file device
plot(subPC$DateTime,
subPC$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_2,
col = "red")
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_3,
col = "blue")
legend("topright", col = c("black", "blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lty = 1)
png(file ="plot2.png", width = 480, height = 480, units = "px")
plot(subPC$DateTime,
subPC$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_2,
col = "red")
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_3,
col = "blue")
legend("topright", col = c("black", "blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lty = 1)
dev.off() # Close the png file device
png(file ="plot2.png", width = 480, height = 480, units = "px")
plot(subPC$DateTime,
subPC$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
dev.off() # Close the png file device
g
g
g
png(file ="plot3.png", width = 480, height = 480, units = "px")
plot(subPC$DateTime,
subPC$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_2,
col = "red")
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_3,
col = "blue")
legend("topright", col = c("black", "blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lty = 1)
dev.off() # Close the png file device
png(file ="plot4.png", width = 480, height = 480, units = "px")
par(mfrow = c(2,2))
# 1
plot(subPC$DateTime,
subPC$Global_active_power,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
# 2
plot(subPC$DateTime,
subPC$Voltage,
type = "l",
xlab = "datetime",
ylab = "Voltage"
)
# 3
plot(subPC$DateTime,
subPC$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Global Active Power (kilowatts)"
)
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_2,
col = "red")
points(subPC$DateTime,
type = "l",
subPC$Sub_metering_3,
col = "blue")
legend("topright", col = c("black", "blue", "red"),
legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lty = 1)
# 4
plot(subPC$DateTime,
subPC$Global_reactive_power,
type = "l",
xlab = "datetime",
ylab = "Global_reactive_power"
)
dev.off() # Close the png file device
slownik <- read.csv("C:/Users/siarkmi2/Documents/R/polimorfologik-2.1.txt",
header=F, sep=";", stringsAsFactors=FALSE
)
slownik <- read.csv("C:/Users/siarkmi2/Documents/R/polimorfologik-2.1.txt",
header=F, sep=";", stringsAsFactors=FALSE
)
class(slownik)
View(slownik)
slownik <- read.csv("C:/Users/siarkmi2/Documents/R/polimorfologik-2.1.txt",
header=F, sep=";", stringsAsFactors=FALSE, encoding = "UTF-8"
)
View(slownik)
View(slownik)

geom = "bar") + # or "line"
scale_x_date(
breaks = "1 month") # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
breaks = "1 month") # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date( breaks = "1 month") # custom x-axis labels
?sclae_x_date
?scale_x_date
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(date_breaks = "1 month") # custom x-axis labels
?scale_x_date
date_labels = date_format("%Y-%m")
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
date_labels = date_format("%Y-%m")
date_breaks = "1 month")  # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
date_labels = date_format("%Y-%m"),
date_breaks = "1 month")  # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
date_labels = date_format("%Y-%m"),
date_breaks = "1 month")  # custom x-axis labels
?scale_x_date
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
date_labels = "%Y-%m",
date_breaks = "1 month")  # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
Date_labels = "%W",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
Date_labels = "%w",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
#Date_labels = "%w",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
Date_labels = "%Y-%w",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
date_labels = "%Y-%w",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
date_labels = "%w",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
date_labels = "%w",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
date_labels = "%Y",
date_breaks = "1 week") # custom x-axis labels
plot(sales.weekly,
main="Sprzedaż usług szerokopasmowych",
xlab="Rok",ylab="Sprzedaż")
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y-%m",
date_breaks = "1 month")  # custom x-axis labels
?stat_summary
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the week
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the month
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y-%m",
date_breaks = "1 month")  # custom x-axis labels
ggseasonplot(sales)
library(forecast)
install.packages(forecast)
install.packages(forecast)
install.packages("forecast")
install.packages(forecast)
library(forecast)
ggseasonplot(sales)
seasonplot(sales,ylab="sprzedaz", xlab="Rok",
main="Seasonal plot: antidiabetic drug sales",
year.labels=TRUE, year.labels.left=TRUE, col=1:20, pch=19)
seasonplot(sales,ylab="sprzedaz", xlab="Rok",
main="Seasonal plot: antidiabetic drug sales",
year.labels=TRUE, year.labels.left=TRUE, col=1:20, pch=19)
View(sales)
xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d')
library(forecast)
ggseasonplot(sales)
sales.ts <-  xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d')
library(forecast)
ggseasonplot(sales)
sales.ts <-  xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d')
library(forecast)
ggseasonplot(sales)
sales.ts <-  xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d')
library(forecast)
ggseasonplot(sales)
sales.ts <-  xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d'))
ggseasonplot(sales.ts)
View(sales.ts)
View(sales.ts)
plot(sales.ts)
plot(sales.ts)
seasonplot(sales.ts,ylab="$ million", xlab="Year",
main="Seasonal plot: antidiabetic drug sales",
year.labels=TRUE, year.labels.left=TRUE, col=1:20, pch=19)
seasonplot(sales.ts,ylab="$ million", xlab="Year",
main="Seasonal plot: antidiabetic drug sales",
year.labels=TRUE, year.labels.left=TRUE, col=1:20, pch=19)
View(sales.ts)
View(sales.ts)
seasonplot(sales.ts)
a.ts <- ts(sales, frequency=12, start=c(2015,1))
seasonplot(a.ts)
sales.ts <-  ts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d'))
monthplot(sales.ts,ylab="$ million",xlab="Month",xaxt="n",
main="Seasonal deviation plot: antidiabetic drug sales")
axis(1,at=1:12,labels=month.abb,cex=0.8)
monthplot(sales.ts,ylab="$ million",xlab="Month",xaxt="n",
main="Seasonal deviation plot: antidiabetic drug sales")
monthplot(a.ts,ylab="$ million",xlab="Month",xaxt="n",
main="Seasonal deviation plot: antidiabetic drug sales")
View(sales.ts)
View(sales.ts)
monthplot(sales.ts,ylab="$ million",xlab="Month",xaxt="n",
main="Seasonal deviation plot: antidiabetic drug sales")
axis(1,at=1:12,labels=month.abb,cex=0.8)
monthplot(sales.ts,ylab="$ million",xlab="Month",xaxt="n",
main="Seasonal deviation plot: antidiabetic drug sales")
axis(1,at=1:12,labels=month.abb,cex=0.8)
beer2 <- window(sales.ts,start=2015,end=2016)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
beer2 <- window(sales.ts,start=2015,end=2016)
View(beer2)
View(beer2)
View(sales)
View(sales)
View(sales.ts)
View(sales.ts)
head(a.ts)
summary(a.ts)
head(a.ts)
?head
head(a.ts, n =1000)
beer2 <- window(sales.ts,start=2015,end=2016)
View(beer2)
View(beer2)
beer2 <- window(q.ts,start=2015,end=2016)
beer2 <- window(a.ts,start=2015,end=2016)
beer2 <- window(sales.ts,start=2015,end=2016)
head(beer2)
beer2 <- window(a.ts,start=2015,end=2016)
head(beer2)
?ts
sales.ts = ts(x,start=c(2015,1,1),frequency=365.25)
sales.ts = ts(sales,start=c(2015,1,1),frequency=365.25)
plot.ts(timeSeriesObj)
plot.ts(sales.ts)
sales.ts <- ts(sales,start=c(2015,1,1),frequency=365.25)
plot.ts(sales.ts)
beer2 <- window(a.ts,start=2015,end=2017)
beerfit1 <- meanf(beer2, h=11)
beer2 <- window(sales.ts,start=2015,end=2017)
beerfit1 <- meanf(beer2, h=11)
beer2 <- window(sales.ts,start=2015,end=2017)
plot.ts(sales.ts)
beer2 <- window(sales.ts,start=2015,end=2017)
beer2 <- window(sales.ts, start=2015)
beerfit1 <- meanf(beer2, h=11)
?meanf
library(forecast)
beer2 <- window(sales.ts, start=2015)
beerfit1 <- meanf(beer2, h=11)
beerfit1 <- meanf(beer2, h=12)
beerfit1 <- meanf(beer2, h=12)
beerfit2 <- naive(beer2, h=12)
beerfit3 <- snaive(beer2, h=12)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
legend("topright",lty=1,col=c(4,2,3),
legend=c("Mean method","Naive method","Seasonal naive method"))
beerfit3 <- snaive(beer2, h=12)
beerfit3 <- snaive(beer2, h=11)
beerfit3 <- snaive(beer2, h=1)
beerfit1 <- meanf(beer2, h=12)
beerfit1 <- meanf(sales.ts, h=12)
beerfit1 <- meanf(beer2, h=12)
beerfit1 <- meanf(beer2, h=12)
beerfit2 <- naive(beer2, h=12)
plot(beerfit2, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
plot(beerfit2, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
beerfit1 <- meanf(beer2, h=12)
beerfit2 <- naive(beer2, h=12)
beerfit3 <- snaive(beer2, h=12)
beerfit1 <- meanf(beer2, h=12)
library(forecast)
beer2 <- window(sales.ts, start=2015)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beerfit1 <- meanf(beer2, h=12)
beerfit2 <- naive(beer2, h=12)
beerfit3 <- snaive(beer2, h=12)
plot(beerfit2, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
sales.ts <- ts(sales.raw,start=c(2015,1,1),frequency=365.25)
warnings()
sales.ts <- ts(sales.raw,start=c(2015,1,1),frequency=365.25)
plot.ts(sales.ts)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beerfit1 <- meanf(beer2, h=12)
beerfit1 <- meanf(sales.ts, h=12)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beerfit1 <- meanf(sales.ts, h=12)
beerfit1 <- meanf(sales.ts, h=12)
?meanf
beerfit1 <- meanf(sales.ts, h=10)
beerfit1 <- meanf(beer2, h=10)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beerfit1 <- meanf(beer2, h=10)
beerfit2 <- naive(beer2, h=12)
beerfit3 <- snaive(beer2, h=12)
d
sales.ts <- ts(sales.raw,start=c(2015,1,1),frequency=365.25)
beerfit1 <- meanf(beer2, h=10)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beerfit1 <- meanf(beer2, h=365.25)
sales.ts <- ts(sales.raw,start=c(2015,1,1),frequency=365.25)
plot.ts(sales.ts)
meanf(sales.ts, h)
meanf(sales.ts, h=1)
sales.xts <-  xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d'))
meanf(sales.xts, h=1)
beer2 <- window(sales.xts, start=2015, end=2017-.1)
beerfit1 <- meanf(beer2, h=365.25)
beerfit2 <- naive(beer2, h=365.25)
beerfit3 <- snaive(beer2, h=365.25)
View(beer2)
View(beer2)
beerfit1 <- meanf(sales.xts, h=365.25)
beerfit2 <- naive(beer2, h=365.25)
beer2 <- window(sales.ts, start=2015, end=2017-.1)
beerfit2 <- naive(beer2, h=365.25)
beerfit3 <- snaive(beer2, h=365.25)
plot(beerfit2, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
View(sales.xts)
View(sales.xts)
library(xts)
library(lubridate)
library(ggplot2)
library(forecast)
View(sales.xts)
View(sales.xts)
sales.xts <-  xts(sales$sprzedaz, as.Date(sales$data, format='%Y-%m-%d'))
str(sales.ts)
class(sales.ts)
x <- stl(sales.ts, s.window = "periodic")
x <- stl(sales.ts, s.window = "periodic")
x <- stl(sales.ts, s.window = "periodic")
plot.ts(sales.ts)
plot.ts(sales.ts)
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=365.25)
plot.ts(sales.ts)
x <- stl(sales.ts, s.window = "periodic")
str(sales.ts)
class(sales.ts)
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=365.25)
plot.ts(sales.ts)
x <- stl(sales.ts, s.window = "periodic")
beer2 <- window(sales.ts)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
lines(beerfit3$mean,col=3)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
legend("topright",lty=1,col=c(4,2,3),
legend=c("Mean method","Naive method","Seasonal naive method"))
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=12)
plot.ts(sales.ts)
sales$Month <- as.Date(cut(sales$data,
breaks = "month"))
sales$Week <- as.Date(cut(sales$data,
breaks = "week",
start.on.monday = TRUE))
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the month
geom = "line") + # "bar" "line"
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the month
geom = "line") + # "bar" "line"
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the month
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y-%m",
date_breaks = "1 month")  # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the month
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y-%m",
date_breaks = "1 month")  # custom x-axis labels
ggplot(data = sales,
aes(Week, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the week
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y",
date_breaks = "1 week") # custom x-axis labels
ggplot(data = sales,
aes(Month, sprzedaz)) +
stat_summary(fun.y = mean, # sum adds up all observations for the month
geom = "line") + # "bar" "line"
scale_x_date(
date_labels = "%Y-%m",
date_breaks = "1 month")  # custom x-axis labels
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=365.25)
plot.ts(sales.ts)
str(sales.ts)
class(sales.ts)
beer2 <- window(sales.ts)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
week <- function(x)format(x, '%Y.%W')
aggregate(sales.ts, by=week, FUN=mean)
aggregate(sales.ts, by=week, FUN=mean)
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=1)
plot.ts(sales.ts)
aggregate(sales.ts, by=week, FUN=mean)
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=365.25)
plot.ts(sales.ts)
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=365)
plot.ts(sales.ts)
sales.ts <- ts(sales.raw$sprzedaz,start=c(2015,1,1),frequency=365)
plot.ts(sales.ts)
aggregate(sales.ts, by=week, FUN=mean)
week <- function(x)format(x, '%Y.%W')
aggregate(sales.ts, by=week, FUN=mean)
aggregate(sales.ts, by=week, FUN=mean)
library("plyr")
library(dplyr)
x<-ddply(data, .(week), function(z) mean(z$value))
sales$week<-floor_date(sales$data,"week") +8
sales
x<-ddply(sales, .(week), function(z) mean(z$value))
x
x<-ddply(sales, .(week), function(z) mean(z$sprzedaz))
x
x.ts <- ts(x$V1)
plot.ts(x.ts)
x.ts <- ts(x$V1, start=c(2015,1,1),frequency=49)
plot.ts(x.ts)
x.ts
?ts
x.ts <- ts(x$V1, start=c(2015,1,1),frequency=52)
x.ts
plot.ts(x.ts)
beer2 <- window(x.ts)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
legend("topright",lty=1,col=c(4,2,3),
legend=c("Mean method","Naive method","Seasonal naive method"))
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
plot(beerfit1, main="Forecasts for quarterly beer production")
?plot
plot.ts(beerfit1)
plot.ts(beerfit1)
plot.ts(x.ts)
lines(beerfit2$mean,col=2)
lines(beerfit1$mean,col=2)
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=2)
plot.ts(x.ts)
lines(beerfit1$mean,col=1)
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
plot.ts(beerfit1$mean,col=1)
plot.ts(x.ts)
plot.ts(beerfit1$mean,col=1)
plot.ts(x.ts)
lines(beerfit1$mean,col=1)
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
plot(beerfit1, main="Forecasts for quarterly beer production")
x.ts
ggplot(x.ts, aes(Date, Views)) + geom_line()
plot.ts(x.ts)
lines(beerfit1$mean,col=1)
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
plot(beerfit1, main="Forecasts for quarterly beer production")
?plot
plot(beerfit1, main="Forecasts for quarterly beer production")
plot(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
lines(beerfit1$mean,col=1)
lines(beerfit2$mean,col=2)
plot.ts(x.ts)
plot.ts(x.ts)
lines(beerfit1$mean,col=1)
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
plot(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
plot.forecast(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
plot.forecast(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
library(forecast)
plot.forecast(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
plot(beerfit1, plot.conf=FALSE, main="Forecasts for quarterly beer production")
library(plot.forecast)
install.packages("plot.forecast")
